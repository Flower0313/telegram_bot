<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.telegram_bot.mapper.Bot">
    <resultMap id="BaseResultMap" type="com.example.telegram_bot.pojo.Phoenix">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <id column="channel_id" property="channelId" jdbcType="VARCHAR"/>
        <result column="message_id" property="messageId" jdbcType="INTEGER"/>
        <result column="group_id" property="groupId" jdbcType="VARCHAR"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
        <result column="province" property="province" jdbcType="VARCHAR"/>
        <result column="city" property="city" jdbcType="VARCHAR"/>
        <result column="city_id" property="cityId" jdbcType="INTEGER"/>
        <result column="area" property="area" jdbcType="VARCHAR"/>
        <result column="if_sw" property="ifSw" jdbcType="BOOLEAN"/>
        <result column="if_by" property="ifBy" jdbcType="BOOLEAN"/>
        <result column="if_door" property="ifDoor" jdbcType="BOOLEAN"/>
        <result column="if_96" property="if96" jdbcType="BOOLEAN"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="min_price" property="minPrice" jdbcType="VARCHAR"/>
        <result column="real_content" property="realContent" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="UserResultMap" type="com.example.telegram_bot.pojo.UserVO">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <id column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="balance" property="balance" jdbcType="DECIMAL"/>
        <result column="type" property="type" jdbcType="VARCHAR"/>
        <result column="city_id" property="cityId" jdbcType="INTEGER"/>
        <result column="code" property="code" jdbcType="INTEGER"/>
    </resultMap>

    <select id="listPhoenix" resultMap="BaseResultMap">
        SELECT id,
        channel_id,
        message_id,
        group_id,
        age,
        province,
        city,
        area,
        IF
        (if_sw = 1, TRUE, FALSE) AS if_sw,
        IF
        (if_by = 1, TRUE, FALSE) AS if_by,
        IF
        (if_door = 1, TRUE, FALSE) AS if_door,
        IF
        (if_96 = 1, TRUE, FALSE) AS if_96,
        min_price,
        remark
        FROM `dwd_building_phoenix`
        where 1=1
        <if test="search != null and search.size() != 0">
            <foreach item="item" index="index" collection="search">
                and remark like concat('%', #{item}, '%')
            </foreach>
        </if>
    </select>

    <select id="getTargetPhoenix" resultMap="BaseResultMap">
        SELECT id,
               channel_id,
               message_id,
               group_id,
               age,
               province,
               city_id,
               city,
               area,
               IF
                   (if_sw = 1, TRUE, FALSE)   AS if_sw,
               IF
                   (if_by = 1, TRUE, FALSE)   AS if_by,
               IF
                   (if_door = 1, TRUE, FALSE) AS if_door,
               IF
                   (if_96 = 1, TRUE, FALSE)   AS if_96,
               min_price,
               remark
                ,
               real_content
        FROM `dwd_building_phoenix`
        where id = #{id}
    </select>
    <insert id="addUser">
        insert into user_info(user_id)
        values (#{userId})
    </insert>

    <select id="selectUser" resultMap="UserResultMap">
        select id,
               user_id,
               balance,
               CASE
                   type
                   WHEN 0 THEN
                       '凤斗者'
                   WHEN 1 THEN
                       '凤斗王'
                   WHEN 2 THEN
                       '凤号斗罗'
                   END as type
                ,
               type    as `code`
        from user_info
        where user_id = #{userId}
    </select>

    <select id="selectUserOri" resultMap="UserResultMap">
        select id,
               user_id,
               balance,
               `type`
        from user_info
        where user_id = #{userId}
    </select>

    <select id="realContent" resultType="java.lang.String">
        SELECT real_content
        FROM `dwd_building_phoenix`
        where id = #{id}
    </select>

    <update id="updateBalance">
        update user_info
        set balance=#{balance}
        where user_id = #{userId}
    </update>

    <update id="updateIdentity">
        update user_info
        set balance=#{balance},
            type=#{type}
        where user_id = #{userId}
    </update>

    <insert id="insertUserCity">
        insert into user_city_info(user_Id, city_id)
        values (#{userId}, #{cityId})
    </insert>

    <insert id="linkBuyAction">
        INSERT INTO user_action (user_id, phoenix_id)
        VALUES (#{userId}, #{phoenixId}) ON DUPLICATE KEY
        UPDATE visits = visits + 1,locked=#{locked};
    </insert>

    <select id="userPhoenixAction" resultType="java.lang.Integer">
        select locked
        from user_action
        where user_id = #{userId}
          and phoenix_id = #{phoenixId}
    </select>

    <insert id="addRedBag">
        insert into user_red_bag(user_id)
        values (#{userId});
    </insert>

    <select id="listCity" resultType="com.example.telegram_bot.pojo.CityVO">
        select city_id as cityId, city_name as cityName
        from city_info
    </select>

    <select id="userCityInfo" resultType="java.lang.Integer">
        select city_id
        from user_city_info
        where user_id = #{userId}
    </select>

    <select id="checkUserPhoenix" resultMap="UserResultMap">
        SELECT a.user_id, a.type, b.city_id
        FROM `user_info` a
                 left join user_city_info b on a.user_id = b.user_id
        where a.user_id = #{userId}
    </select>

    <select id="checkUserCity" resultType="java.lang.String">
        SELECT b.city_name
        FROM `user_city_info` a
                 left join city_info b
                           on a.city_id = b.city_id
        where a.user_id = #{userId}
    </select>
</mapper>